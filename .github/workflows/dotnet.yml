# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
        
  push-to-registry:
    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker images
        run: docker-compose build
        
      - name: Connect to DockerHub
        run: docker login -u publicaccount123 -p dckr_pat_mxlDyYHHTiDfkvhXWb0II2xOuRc

      - name: Push images to registry
        run: |
          pushable_images=("patient-service" "measurement-service" "patient-ui")
          
          # Get running container names
          running_containers=$(docker ps --format "{{.Names}}") 
          
          for container in $running_containers; do
            image_name=$(docker inspect $container --format='{{.Config.Image}}') # Get image name
            if [[ " ${pushable_images[@]} " =~ " ${image_name} " ]]; then  # Check if image is pushable
              echo "Pushing image: $image_name"
              docker tag $image_name publicaccount123/$image_name:latest # Tag the image
              docker push publicaccount123/$image_name:latest
            fi
          done 


        